/*
Copyright (C) 2017-2019 OpenIO SAS, as part of OpenIO SDS

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef OIO__OIO_SDS_PROXY_PROXY_VARIABLES_H_
#define OIO__OIO_SDS_PROXY_PROXY_VARIABLES_H_

#include "core/oiovar.h"

/* AUTO-GENERATED by confgen.py */

#ifndef OIO_ENBUG_PROXY_CS_FAILURE_RATE
# define OIO_ENBUG_PROXY_CS_FAILURE_RATE (0)
#endif

extern gint32 proxy_enbug_cs_failure_rate;

#ifndef OIO_ENBUG_PROXY_REQUEST_FAILURE_ALONE
# define OIO_ENBUG_PROXY_REQUEST_FAILURE_ALONE (0)
#endif

extern gint32 oio_proxy_request_failure_threshold_alone;

#ifndef OIO_ENBUG_PROXY_REQUEST_FAILURE_FIRST
# define OIO_ENBUG_PROXY_REQUEST_FAILURE_FIRST (0)
#endif

extern gint32 oio_proxy_request_failure_threshold_first;

#ifndef OIO_ENBUG_PROXY_REQUEST_FAILURE_LAST
# define OIO_ENBUG_PROXY_REQUEST_FAILURE_LAST (0)
#endif

extern gint32 oio_proxy_request_failure_threshold_last;

#ifndef OIO_ENBUG_PROXY_REQUEST_FAILURE_MIDDLE
# define OIO_ENBUG_PROXY_REQUEST_FAILURE_MIDDLE (0)
#endif

extern gint32 oio_proxy_request_failure_threshold_middle;

#ifndef OIO_PROXY_BULK_MAX_CREATE_MANY
# define OIO_PROXY_BULK_MAX_CREATE_MANY (100)
#endif

extern guint proxy_bulk_max_create_many;

#ifndef OIO_PROXY_BULK_MAX_DELETE_MANY
# define OIO_PROXY_BULK_MAX_DELETE_MANY (100)
#endif

extern guint proxy_bulk_max_delete_many;

#ifndef OIO_PROXY_CACHE_ENABLED
# define OIO_PROXY_CACHE_ENABLED (TRUE)
#endif

extern gboolean flag_cache_enabled;

#ifndef OIO_PROXY_DIR_SHUFFLE
# define OIO_PROXY_DIR_SHUFFLE (TRUE)
#endif

extern gboolean oio_proxy_dir_shuffle;

#ifndef OIO_PROXY_FORCE_MASTER
# define OIO_PROXY_FORCE_MASTER (FALSE)
#endif

extern gboolean flag_force_master;

#ifndef OIO_PROXY_LOCATION
# define OIO_PROXY_LOCATION ""
#endif

extern gchar oio_proxy_location[256];

#ifndef OIO_PROXY_OUTGOING_TIMEOUT_COMMON
# define OIO_PROXY_OUTGOING_TIMEOUT_COMMON (30.0)
#endif

extern gdouble proxy_timeout_common;

#ifndef OIO_PROXY_OUTGOING_TIMEOUT_CONFIG
# define OIO_PROXY_OUTGOING_TIMEOUT_CONFIG (10.0)
#endif

extern gdouble proxy_timeout_config;

#ifndef OIO_PROXY_OUTGOING_TIMEOUT_CONSCIENCE
# define OIO_PROXY_OUTGOING_TIMEOUT_CONSCIENCE (10.0)
#endif

extern gdouble proxy_timeout_conscience;

#ifndef OIO_PROXY_OUTGOING_TIMEOUT_INFO
# define OIO_PROXY_OUTGOING_TIMEOUT_INFO (5.0)
#endif

extern gdouble proxy_timeout_info;

#ifndef OIO_PROXY_OUTGOING_TIMEOUT_STAT
# define OIO_PROXY_OUTGOING_TIMEOUT_STAT (10.0)
#endif

extern gdouble proxy_timeout_stat;

#ifndef OIO_PROXY_PERIOD_CS_DOWNSTREAM
# define OIO_PROXY_PERIOD_CS_DOWNSTREAM (5)
#endif

extern gint64 lb_downstream_delay;

#ifndef OIO_PROXY_PERIOD_CS_UPSTREAM
# define OIO_PROXY_PERIOD_CS_UPSTREAM (1)
#endif

extern gint64 lb_upstream_delay;

#ifndef OIO_PROXY_PERIOD_REFRESH_CSURL
# define OIO_PROXY_PERIOD_REFRESH_CSURL (30)
#endif

extern gint64 csurl_refresh_delay;

#ifndef OIO_PROXY_PERIOD_REFRESH_SRVTYPES
# define OIO_PROXY_PERIOD_REFRESH_SRVTYPES (30)
#endif

extern gint64 srvtypes_refresh_delay;

#ifndef OIO_PROXY_PERIOD_RELOAD_NSINFO
# define OIO_PROXY_PERIOD_RELOAD_NSINFO (30)
#endif

extern gint64 nsinfo_refresh_delay;

#ifndef OIO_PROXY_PREFER_MASTER_FOR_READ
# define OIO_PROXY_PREFER_MASTER_FOR_READ (FALSE)
#endif

extern gboolean flag_prefer_master_for_read;

#ifndef OIO_PROXY_PREFER_MASTER_FOR_WRITE
# define OIO_PROXY_PREFER_MASTER_FOR_WRITE (TRUE)
#endif

extern gboolean flag_prefer_master_for_write;

#ifndef OIO_PROXY_PREFER_SLAVE_FOR_READ
# define OIO_PROXY_PREFER_SLAVE_FOR_READ (TRUE)
#endif

extern gboolean flag_prefer_slave_for_read;

#ifndef OIO_PROXY_QUIRK_LOCAL_SCORES
# define OIO_PROXY_QUIRK_LOCAL_SCORES (FALSE)
#endif

extern gboolean flag_local_scores;

#ifndef OIO_PROXY_REQUEST_MAX_DELAY
# define OIO_PROXY_REQUEST_MAX_DELAY (1 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 proxy_request_max_delay;

#ifndef OIO_PROXY_SRV_LOCAL_PATCH
# define OIO_PROXY_SRV_LOCAL_PATCH (FALSE)
#endif

extern gboolean oio_proxy_local_patch;

#ifndef OIO_PROXY_SRV_LOCAL_PREPARE
# define OIO_PROXY_SRV_LOCAL_PREPARE (0)
#endif

extern gint oio_proxy_local_prepare;

#ifndef OIO_PROXY_SRV_SHUFFLE
# define OIO_PROXY_SRV_SHUFFLE (TRUE)
#endif

extern gboolean oio_proxy_srv_shuffle;

#ifndef OIO_PROXY_TTL_SERVICES_DOWN
# define OIO_PROXY_TTL_SERVICES_DOWN (5 * G_TIME_SPAN_SECOND)
#endif

extern gint64 ttl_down_services;

#ifndef OIO_PROXY_TTL_SERVICES_KNOWN
# define OIO_PROXY_TTL_SERVICES_KNOWN (5 * G_TIME_SPAN_DAY)
#endif

extern gint64 ttl_known_services;

#ifndef OIO_PROXY_TTL_SERVICES_LOCAL
# define OIO_PROXY_TTL_SERVICES_LOCAL (30 * G_TIME_SPAN_SECOND)
#endif

extern gint64 ttl_expire_local_services;

#ifndef OIO_PROXY_TTL_SERVICES_MASTER
# define OIO_PROXY_TTL_SERVICES_MASTER (30 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 ttl_expire_master_services;

#ifndef OIO_PROXY_URL_PATH_MAXLEN
# define OIO_PROXY_URL_PATH_MAXLEN (2048)
#endif

extern guint proxy_url_path_maxlen;


#endif /* OIO__OIO_SDS_PROXY_PROXY_VARIABLES_H_ */
