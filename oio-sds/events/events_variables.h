/*
Copyright (C) 2017-2019 OpenIO SAS, as part of OpenIO SDS

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef OIO__OIO_SDS_EVENTS_EVENTS_VARIABLES_H_
#define OIO__OIO_SDS_EVENTS_EVENTS_VARIABLES_H_

#include "core/oiovar.h"

/* AUTO-GENERATED by confgen.py */

#ifndef OIO_EVENTS_BEANSTALKD_CHECK_LEVEL_ALERT
# define OIO_EVENTS_BEANSTALKD_CHECK_LEVEL_ALERT (0)
#endif

extern gint64 oio_events_beanstalkd_check_level_alert;

#ifndef OIO_EVENTS_BEANSTALKD_CHECK_LEVEL_DENY
# define OIO_EVENTS_BEANSTALKD_CHECK_LEVEL_DENY (512000)
#endif

extern gint64 oio_events_beanstalkd_check_level_deny;

#ifndef OIO_EVENTS_BEANSTALKD_CHECK_PERIOD
# define OIO_EVENTS_BEANSTALKD_CHECK_PERIOD (0)
#endif

extern gint64 oio_events_beanstalkd_check_period;

#ifndef OIO_EVENTS_BEANSTALKD_DELAY
# define OIO_EVENTS_BEANSTALKD_DELAY (0)
#endif

extern gint64 oio_events_beanstalkd_default_delay;

#ifndef OIO_EVENTS_BEANSTALKD_PRIO
# define OIO_EVENTS_BEANSTALKD_PRIO (2147483648)
#endif

extern guint oio_events_beanstalkd_default_prio;

#ifndef OIO_EVENTS_BEANSTALKD_TIMEOUT
# define OIO_EVENTS_BEANSTALKD_TIMEOUT (4 * G_TIME_SPAN_SECOND)
#endif

extern gint64 oio_events_beanstalkd_timeout;

#ifndef OIO_EVENTS_BEANSTALKD_TTR
# define OIO_EVENTS_BEANSTALKD_TTR (120)
#endif

extern gint64 oio_events_beanstalkd_default_ttr;

#ifndef OIO_EVENTS_COMMON_PENDING_DELAY
# define OIO_EVENTS_COMMON_PENDING_DELAY (1 * G_TIME_SPAN_SECOND)
#endif

extern gint64 oio_events_common_buffer_delay;

#ifndef OIO_EVENTS_COMMON_PENDING_MAX
# define OIO_EVENTS_COMMON_PENDING_MAX (10000)
#endif

extern guint32 oio_events_common_max_pending;

#ifndef OIO_EVENTS_ZMQ_MAX_RECV
# define OIO_EVENTS_ZMQ_MAX_RECV (32)
#endif

extern guint oio_events_zmq_max_recv;

#ifndef OIO_META1_TUBE_REFERENCES
# define OIO_META1_TUBE_REFERENCES "oio"
#endif

extern gchar oio_meta1_tube_references[64];

#ifndef OIO_META1_TUBE_SERVICES
# define OIO_META1_TUBE_SERVICES "oio"
#endif

extern gchar oio_meta1_tube_services[64];

#ifndef OIO_META2_TUBE_CONTAINER_DELETED
# define OIO_META2_TUBE_CONTAINER_DELETED "oio"
#endif

extern gchar oio_meta2_tube_container_deleted[64];

#ifndef OIO_META2_TUBE_CONTAINER_NEW
# define OIO_META2_TUBE_CONTAINER_NEW "oio"
#endif

extern gchar oio_meta2_tube_container_new[64];

#ifndef OIO_META2_TUBE_CONTAINER_STATE
# define OIO_META2_TUBE_CONTAINER_STATE "oio"
#endif

extern gchar oio_meta2_tube_container_state[64];

#ifndef OIO_META2_TUBE_CONTAINER_UPDATED
# define OIO_META2_TUBE_CONTAINER_UPDATED "oio"
#endif

extern gchar oio_meta2_tube_container_updated[64];

#ifndef OIO_META2_TUBE_CONTENT_APPENDED
# define OIO_META2_TUBE_CONTENT_APPENDED "oio"
#endif

extern gchar oio_meta2_tube_content_appended[64];

#ifndef OIO_META2_TUBE_CONTENT_BROKEN
# define OIO_META2_TUBE_CONTENT_BROKEN "oio"
#endif

extern gchar oio_meta2_tube_content_broken[64];

#ifndef OIO_META2_TUBE_CONTENT_CREATED
# define OIO_META2_TUBE_CONTENT_CREATED "oio"
#endif

extern gchar oio_meta2_tube_content_created[64];

#ifndef OIO_META2_TUBE_CONTENT_DELETED
# define OIO_META2_TUBE_CONTENT_DELETED "oio"
#endif

extern gchar oio_meta2_tube_content_deleted[64];

#ifndef OIO_META2_TUBE_CONTENT_DRAINED
# define OIO_META2_TUBE_CONTENT_DRAINED "oio"
#endif

extern gchar oio_meta2_tube_content_drained[64];

#ifndef OIO_META2_TUBE_CONTENT_UPDATED
# define OIO_META2_TUBE_CONTENT_UPDATED "oio"
#endif

extern gchar oio_meta2_tube_content_updated[64];

#ifndef OIO_META2_TUBE_META2_DELETED
# define OIO_META2_TUBE_META2_DELETED "oio"
#endif

extern gchar oio_meta2_tube_meta2_deleted[64];

#ifndef OIO_RAWX_TUBE_CHUNK_CREATED
# define OIO_RAWX_TUBE_CHUNK_CREATED "oio"
#endif

extern gchar oio_rawx_tube_chunk_created[64];

#ifndef OIO_RAWX_TUBE_CHUNK_DELETED
# define OIO_RAWX_TUBE_CHUNK_DELETED "oio"
#endif

extern gchar oio_rawx_tube_chunk_deleted[64];


#endif /* OIO__OIO_SDS_EVENTS_EVENTS_VARIABLES_H_ */
