/*
Copyright (C) 2017-2019 OpenIO SAS, as part of OpenIO SDS

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library.
*/

#ifndef OIO__OIO_SDS_METAUTILS_LIB_COMMON_VARIABLES_H_
#define OIO__OIO_SDS_METAUTILS_LIB_COMMON_VARIABLES_H_

#include "core/oiovar.h"

/* AUTO-GENERATED by confgen.py */

#ifndef OIO_CLIENT_DOWN_CACHE_AVOID
# define OIO_CLIENT_DOWN_CACHE_AVOID (TRUE)
#endif

extern gboolean oio_client_down_avoid;

#ifndef OIO_CLIENT_DOWN_CACHE_SHORTEN
# define OIO_CLIENT_DOWN_CACHE_SHORTEN (FALSE)
#endif

extern gboolean oio_client_down_shorten;

#ifndef OIO_CLIENT_ERRORS_CACHE_ENABLED
# define OIO_CLIENT_ERRORS_CACHE_ENABLED (FALSE)
#endif

extern gboolean oio_client_cache_errors;

#ifndef OIO_CLIENT_ERRORS_CACHE_MAX
# define OIO_CLIENT_ERRORS_CACHE_MAX (60)
#endif

extern guint64 oio_client_cache_errors_max;

#ifndef OIO_CLIENT_ERRORS_CACHE_PERIOD
# define OIO_CLIENT_ERRORS_CACHE_PERIOD (60)
#endif

extern gint64 oio_client_cache_errors_period;

#ifndef OIO_COMMON_VERBOSITY_RESET_DELAY
# define OIO_COMMON_VERBOSITY_RESET_DELAY (5 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 main_log_level_reset_delay;

#ifndef OIO_ENBUG_CLIENT_FAKE_TIMEOUT_THRESHOLD
# define OIO_ENBUG_CLIENT_FAKE_TIMEOUT_THRESHOLD (0)
#endif

extern gint32 oio_client_fake_timeout_threshold;

#ifndef OIO_GRIDD_TIMEOUT_CONNECT_COMMON
# define OIO_GRIDD_TIMEOUT_CONNECT_COMMON (4.0)
#endif

extern gdouble oio_client_timeout_connect;

#ifndef OIO_GRIDD_TIMEOUT_SINGLE_COMMON
# define OIO_GRIDD_TIMEOUT_SINGLE_COMMON (30.0)
#endif

extern gdouble oio_client_timeout_single;

#ifndef OIO_GRIDD_TIMEOUT_WHOLE_COMMON
# define OIO_GRIDD_TIMEOUT_WHOLE_COMMON (30.0)
#endif

extern gdouble oio_client_timeout_whole;

#ifndef OIO_META0_OUTGOING_TIMEOUT_COMMON_REQ
# define OIO_META0_OUTGOING_TIMEOUT_COMMON_REQ (10.0)
#endif

extern gdouble oio_m0_client_timeout_common;

#ifndef OIO_META1_OUTGOING_TIMEOUT_COMMON_REQ
# define OIO_META1_OUTGOING_TIMEOUT_COMMON_REQ (10.0)
#endif

extern gdouble oio_m1_client_timeout_common;

#ifndef OIO_NS_CHUNK_SIZE
# define OIO_NS_CHUNK_SIZE (10485760)
#endif

extern gint64 oio_ns_chunk_size;

#ifndef OIO_NS_FLAT_BITS
# define OIO_NS_FLAT_BITS (17)
#endif

extern guint oio_ns_flat_bits;

#ifndef OIO_NS_MASTER
# define OIO_NS_MASTER (TRUE)
#endif

extern gboolean oio_ns_master;

#ifndef OIO_NS_META1_DIGITS
# define OIO_NS_META1_DIGITS (4)
#endif

extern guint oio_ns_meta1_digits;

#ifndef OIO_NS_SERVICE_UPDATE_POLICY
# define OIO_NS_SERVICE_UPDATE_POLICY "meta2=KEEP|3|1;sqlx=KEEP|1|1|;rdir=KEEP|1|1|"
#endif

extern gchar oio_ns_service_update_policy[1024];

#ifndef OIO_NS_STORAGE_POLICY
# define OIO_NS_STORAGE_POLICY "NONE"
#endif

extern gchar oio_ns_storage_policy[128];

#ifndef OIO_NS_WORM
# define OIO_NS_WORM (FALSE)
#endif

extern gboolean oio_ns_mode_worm;

#ifndef OIO_SERVER_LOG_OUTGOING
# define OIO_SERVER_LOG_OUTGOING (FALSE)
#endif

extern gboolean oio_log_outgoing;

#ifndef OIO_SERVER_PERFDATA_ENABLED
# define OIO_SERVER_PERFDATA_ENABLED (FALSE)
#endif

extern gboolean server_perfdata_enabled;

#ifndef OIO_SOCKET_FASTOPEN_ENABLED
# define OIO_SOCKET_FASTOPEN_ENABLED (TRUE)
#endif

extern gboolean oio_socket_fastopen;

#ifndef OIO_SOCKET_GRIDD_RCVBUF
# define OIO_SOCKET_GRIDD_RCVBUF (0)
#endif

extern guint oio_socket_gridd_rcvbuf;

#ifndef OIO_SOCKET_GRIDD_SNDBUF
# define OIO_SOCKET_GRIDD_SNDBUF (0)
#endif

extern guint oio_socket_gridd_sndbuf;

#ifndef OIO_SOCKET_LINGER_DELAY
# define OIO_SOCKET_LINGER_DELAY (1)
#endif

extern gint64 oio_socket_linger_delay;

#ifndef OIO_SOCKET_LINGER_ENABLED
# define OIO_SOCKET_LINGER_ENABLED (FALSE)
#endif

extern gboolean oio_socket_linger_onoff;

#ifndef OIO_SOCKET_NODELAY_ENABLED
# define OIO_SOCKET_NODELAY_ENABLED (TRUE)
#endif

extern gboolean oio_socket_nodelay;

#ifndef OIO_SOCKET_QUICKACK_ENABLED
# define OIO_SOCKET_QUICKACK_ENABLED (TRUE)
#endif

extern gboolean oio_socket_quickack;

#ifndef OIO_VOLUME_LAZY_LOCK
# define OIO_VOLUME_LAZY_LOCK (TRUE)
#endif

extern gboolean oio_volume_lock_lazy;


#endif /* OIO__OIO_SDS_METAUTILS_LIB_COMMON_VARIABLES_H_ */
