/*
Copyright (C) 2017-2019 OpenIO SAS, as part of OpenIO SDS

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library.
*/

#ifndef OIO__OIO_SDS_SQLITEREPO_SQLITEREPO_VARIABLES_H_
#define OIO__OIO_SDS_SQLITEREPO_SQLITEREPO_VARIABLES_H_

#include "core/oiovar.h"

/* AUTO-GENERATED by confgen.py */

#ifndef OIO_ENBUG_ELECTION_DOUBLE_MASTER_DB
# define OIO_ENBUG_ELECTION_DOUBLE_MASTER_DB ""
#endif

extern gchar sqliterepo_election_2master_db[256];

#ifndef OIO_ENBUG_SQLITEREPO_CLIENT_FAILURE_THRESHOLD
# define OIO_ENBUG_SQLITEREPO_CLIENT_FAILURE_THRESHOLD (0)
#endif

extern gint32 oio_sqlx_request_failure_threshold;

#ifndef OIO_ENBUG_SQLITEREPO_CLIENT_TIMEOUT_PERIOD
# define OIO_ENBUG_SQLITEREPO_CLIENT_TIMEOUT_PERIOD (1 * G_TIME_SPAN_SECOND)
#endif

extern gint64 oio_sqlx_timeout_check_period;

#ifndef OIO_ENBUG_SQLITEREPO_SYNCHRO_FAILURE
# define OIO_ENBUG_SQLITEREPO_SYNCHRO_FAILURE (0)
#endif

extern gint32 oio_sync_failure_threshold_action;

#ifndef OIO_SQLITEREPO_CACHE_HEAT_THRESHOLD
# define OIO_SQLITEREPO_CACHE_HEAT_THRESHOLD (1)
#endif

extern guint32 _cache_heat_threshold;

#ifndef OIO_SQLITEREPO_CACHE_HEAVYLOAD_ALERT
# define OIO_SQLITEREPO_CACHE_HEAVYLOAD_ALERT (TRUE)
#endif

extern gboolean _cache_alert_on_heavy_load;

#ifndef OIO_SQLITEREPO_CACHE_HEAVYLOAD_FAIL
# define OIO_SQLITEREPO_CACHE_HEAVYLOAD_FAIL (FALSE)
#endif

extern gboolean _cache_fail_on_heavy_load;

#ifndef OIO_SQLITEREPO_CACHE_KBYTES_PER_DB
# define OIO_SQLITEREPO_CACHE_KBYTES_PER_DB (0)
#endif

extern guint oio_sqliterepo_cache_kbytes_per_db;

#ifndef OIO_SQLITEREPO_CACHE_TIMEOUT_LOCK
# define OIO_SQLITEREPO_CACHE_TIMEOUT_LOCK (1 * G_TIME_SPAN_SECOND)
#endif

extern gint64 _cache_period_cond_wait;

#ifndef OIO_SQLITEREPO_CACHE_TIMEOUT_OPEN
# define OIO_SQLITEREPO_CACHE_TIMEOUT_OPEN (20 * G_TIME_SPAN_SECOND)
#endif

extern gint64 _cache_timeout_open;

#ifndef OIO_SQLITEREPO_CACHE_TTL_COOL
# define OIO_SQLITEREPO_CACHE_TTL_COOL (1 * G_TIME_SPAN_MILLISECOND)
#endif

extern gint64 _cache_grace_delay_cool;

#ifndef OIO_SQLITEREPO_CACHE_TTL_HOT
# define OIO_SQLITEREPO_CACHE_TTL_HOT (1 * G_TIME_SPAN_MILLISECOND)
#endif

extern gint64 _cache_grace_delay_hot;

#ifndef OIO_SQLITEREPO_CACHE_WAITING_MAX
# define OIO_SQLITEREPO_CACHE_WAITING_MAX (16)
#endif

extern guint32 _cache_max_waiting;

#ifndef OIO_SQLITEREPO_CLIENT_TIMEOUT_ALERT_IF_LONGER
# define OIO_SQLITEREPO_CLIENT_TIMEOUT_ALERT_IF_LONGER (5 * G_TIME_SPAN_SECOND)
#endif

extern gint64 oio_sqlx_timeout_check_max;

#ifndef OIO_SQLITEREPO_DUMP_CHUNK_SIZE
# define OIO_SQLITEREPO_DUMP_CHUNK_SIZE (8388608)
#endif

extern gint64 sqliterepo_dump_chunk_size;

#ifndef OIO_SQLITEREPO_DUMP_MAX_SIZE
# define OIO_SQLITEREPO_DUMP_MAX_SIZE (1073741824)
#endif

extern gint64 sqliterepo_dump_max_size;

#ifndef OIO_SQLITEREPO_DUMPS_MAX
# define OIO_SQLITEREPO_DUMPS_MAX (1024)
#endif

extern gint sqliterepo_dumps_max;

#ifndef OIO_SQLITEREPO_DUMPS_TIMEOUT
# define OIO_SQLITEREPO_DUMPS_TIMEOUT (4 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 sqliterepo_dumps_timeout;

#ifndef OIO_SQLITEREPO_ELECTION_ALLOW_MASTER
# define OIO_SQLITEREPO_ELECTION_ALLOW_MASTER (TRUE)
#endif

extern gboolean sqliterepo_allow_master;

#ifndef OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_MASTER
# define OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_MASTER (240 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 oio_election_delay_expire_MASTER;

#ifndef OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_NONE
# define OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_NONE (30 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 oio_election_delay_expire_NONE;

#ifndef OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_PENDING
# define OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_PENDING (12 * G_TIME_SPAN_SECOND)
#endif

extern gint64 oio_election_delay_expire_pending;

#ifndef OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_SLAVE
# define OIO_SQLITEREPO_ELECTION_DELAY_EXPIRE_SLAVE (210 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 oio_election_delay_expire_SLAVE;

#ifndef OIO_SQLITEREPO_ELECTION_DELAY_RETRY_FAILED
# define OIO_SQLITEREPO_ELECTION_DELAY_RETRY_FAILED (250 * G_TIME_SPAN_MILLISECOND)
#endif

extern gint64 oio_election_delay_retry_FAILED;

#ifndef OIO_SQLITEREPO_ELECTION_LAZY_RECOVER
# define OIO_SQLITEREPO_ELECTION_LAZY_RECOVER (FALSE)
#endif

extern gboolean sqliterepo_election_lazy_recover;

#ifndef OIO_SQLITEREPO_ELECTION_LOCK_ALERT_DELAY
# define OIO_SQLITEREPO_ELECTION_LOCK_ALERT_DELAY (500)
#endif

extern gint64 oio_election_lock_alert_delay;

#ifndef OIO_SQLITEREPO_ELECTION_NOWAIT_AFTER
# define OIO_SQLITEREPO_ELECTION_NOWAIT_AFTER (15 * G_TIME_SPAN_MINUTE)
#endif

extern gint64 oio_election_delay_nowait_pending;

#ifndef OIO_SQLITEREPO_ELECTION_NOWAIT_ENABLE
# define OIO_SQLITEREPO_ELECTION_NOWAIT_ENABLE (FALSE)
#endif

extern gboolean oio_election_enable_nowait_pending;

#ifndef OIO_SQLITEREPO_ELECTION_WAIT_DELAY
# define OIO_SQLITEREPO_ELECTION_WAIT_DELAY (20 * G_TIME_SPAN_SECOND)
#endif

extern gint64 oio_election_delay_wait;

#ifndef OIO_SQLITEREPO_ELECTION_WAIT_QUANTUM
# define OIO_SQLITEREPO_ELECTION_WAIT_QUANTUM (4 * G_TIME_SPAN_SECOND)
#endif

extern gint64 oio_election_period_cond_wait;

#ifndef OIO_SQLITEREPO_PAGE_SIZE
# define OIO_SQLITEREPO_PAGE_SIZE (4096)
#endif

extern guint _page_size;

#ifndef OIO_SQLITEREPO_RELEASE_SIZE
# define OIO_SQLITEREPO_RELEASE_SIZE (67108864)
#endif

extern guint sqliterepo_release_size;

#ifndef OIO_SQLITEREPO_REPO_ACTIVE_QUEUE_TTL
# define OIO_SQLITEREPO_REPO_ACTIVE_QUEUE_TTL (4 * G_TIME_SPAN_SECOND)
#endif

extern gint64 sqliterepo_active_queue_ttl;

#ifndef OIO_SQLITEREPO_REPO_FD_MAX_ACTIVE
# define OIO_SQLITEREPO_REPO_FD_MAX_ACTIVE (512)
#endif

extern guint sqliterepo_fd_max_active;

#ifndef OIO_SQLITEREPO_REPO_FD_MIN_ACTIVE
# define OIO_SQLITEREPO_REPO_FD_MIN_ACTIVE (32)
#endif

extern guint sqliterepo_fd_min_active;

#ifndef OIO_SQLITEREPO_REPO_GETVERS_ATTEMPTS
# define OIO_SQLITEREPO_REPO_GETVERS_ATTEMPTS (5)
#endif

extern guint sqliterepo_getvers_attempts;

#ifndef OIO_SQLITEREPO_REPO_GETVERS_DELAY
# define OIO_SQLITEREPO_REPO_GETVERS_DELAY (100 * G_TIME_SPAN_MILLISECOND)
#endif

extern gint64 sqliterepo_getvers_delay;

#ifndef OIO_SQLITEREPO_REPO_HARD_MAX
# define OIO_SQLITEREPO_REPO_HARD_MAX (0)
#endif

extern guint sqliterepo_repo_max_bases_hard;

#ifndef OIO_SQLITEREPO_REPO_SOFT_MAX
# define OIO_SQLITEREPO_REPO_SOFT_MAX (0)
#endif

extern guint sqliterepo_repo_max_bases_soft;

#ifndef OIO_SQLITEREPO_RSS_MAX
# define OIO_SQLITEREPO_RSS_MAX (0)
#endif

extern gint64 sqliterepo_max_rss;

#ifndef OIO_SQLITEREPO_UDP_DEFERRED
# define OIO_SQLITEREPO_UDP_DEFERRED (TRUE)
#endif

extern gboolean sqliterepo_udp_deferred;

#ifndef OIO_SQLITEREPO_ZK_MUX_FACTOR
# define OIO_SQLITEREPO_ZK_MUX_FACTOR (1)
#endif

extern guint sqliterepo_zk_mux_factor;

#ifndef OIO_SQLITEREPO_ZK_RRD_THRESHOLD
# define OIO_SQLITEREPO_ZK_RRD_THRESHOLD (5)
#endif

extern guint disconnection_threshold;

#ifndef OIO_SQLITEREPO_ZK_RRD_WINDOW
# define OIO_SQLITEREPO_ZK_RRD_WINDOW (30)
#endif

extern guint disconnection_rrd_window;

#ifndef OIO_SQLITEREPO_ZK_SHUFFLE
# define OIO_SQLITEREPO_ZK_SHUFFLE (TRUE)
#endif

extern gboolean sqliterepo_zk_shuffle;

#ifndef OIO_SQLITEREPO_ZK_TIMEOUT
# define OIO_SQLITEREPO_ZK_TIMEOUT (10 * G_TIME_SPAN_SECOND)
#endif

extern gint64 sqliterepo_zk_timeout;


#endif /* OIO__OIO_SDS_SQLITEREPO_SQLITEREPO_VARIABLES_H_ */
